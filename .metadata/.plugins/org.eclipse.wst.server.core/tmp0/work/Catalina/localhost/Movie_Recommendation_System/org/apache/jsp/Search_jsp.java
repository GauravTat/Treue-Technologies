/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-08-25 08:40:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import movie.dto.SearchHistory;
import movie.dto.User;
import movie.dto.Movie;
import java.util.List;
import javax.persistence.*;

public final class Search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.persistence");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("movie.dto.SearchHistory");
    _jspx_imports_classes.add("movie.dto.User");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("movie.dto.Movie");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Search</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"Css.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      out.write("	");

		EntityManagerFactory emf=Persistence.createEntityManagerFactory("Movie");
		EntityManager em=emf.createEntityManager();
		EntityTransaction et=em.getTransaction();
		
		User user=(User)session.getAttribute("user");
		Query qu=em.createQuery("select a from Movie a");
		List<Movie> movie=qu.getResultList();
		
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div>\r\n");
      out.write("		<div class=\"search\">\r\n");
      out.write("		<h1>Welcome, ");
      out.print(user.getName() );
      out.write("</h1>\r\n");
      out.write("		<lable for=\"mydropdown\" style=\"color:white;\">Genre:</lable>\r\n");
      out.write("		<select id=\"mydropdown\" onchange=\"window.location.href=this.value;\">\r\n");
      out.write("		 	<option value=\"\" selected disabled>Select an Genre</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Action\">Action</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Comedy\">Comedy</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Drama\">Drama</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Thriller\">Thriller</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Adventure\">Adventure</option>\r\n");
      out.write("			 <option value=\"Search.jsp?Genre=Romance\">Romance</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<form action=\"Search.jsp\">\r\n");
      out.write("			<input type=\"text\" name=\"Mname\" placeholder=\"Name of Movie\">\r\n");
      out.write("			<input type=\"submit\" value=\"Search\" class=\"sub\">\r\n");
      out.write("		</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");

		String Genre=request.getParameter("Genre");
		if(Genre!=null){
			Query qu1=em.createQuery("select a from Movie a where a.Genre=?1");
			qu1.setParameter(1, Genre);
			List<Movie> GenreMovie=qu1.getResultList();
			
			if(GenreMovie.size()>0){
				for(Movie m:GenreMovie){
					
      out.write("\r\n");
      out.write("				<div class=\"div-1 box\">\r\n");
      out.write("					<h1>");
      out.print(m.getMovieName() );
      out.write("</h1>\r\n");
      out.write("					<p>");
      out.print(m.getDateOfLaunch() );
      out.write("</p>\r\n");
      out.write("					<p>");
      out.print(m.getQuality() );
      out.write("</p>\r\n");
      out.write("					<p class=\"anchor\"><a href=\"Rate.jsp?Id=");
      out.print(m.getId());
      out.write("\">Give a rating</a></p>\r\n");
      out.write("				</div>\r\n");
      out.write("					");
 
				}
			}
		}
		
		String MName=request.getParameter("Mname");
		if(MName!=null){
			Query qu3=em.createQuery("select b from Movie b where b.MovieName=?1");
			qu3.setParameter(1, MName);
			List<Movie> SearchMovie=qu3.getResultList();
			
			//Adding Search History 
			SearchHistory shistory=new SearchHistory(MName,user);
			List<SearchHistory> sh=user.getSh();
			if(sh.size()>0){
				sh.add(shistory);
			}
			else{
				sh=new ArrayList<SearchHistory>();
				sh.add(shistory);
			}
			user.setSh(sh);
			
			if(SearchMovie.size()>0){
				for(Movie m:SearchMovie){
					
      out.write("\r\n");
      out.write("				<div class=\"div-1 box\">\r\n");
      out.write("					<h1>");
      out.print(m.getMovieName() );
      out.write("</h1>\r\n");
      out.write("					<p>");
      out.print(m.getDateOfLaunch() );
      out.write("</p>\r\n");
      out.write("					<p>");
      out.print(m.getQuality() );
      out.write("</p>\r\n");
      out.write("					<p class=\"anchor\"><a href=\"Rate.jsp?Id=");
      out.print(m.getId());
      out.write("\">Give a rating</a></p>\r\n");
      out.write("				</div>\r\n");
      out.write("					");

				}
			}
			else{
				
      out.write("\r\n");
      out.write("			<h2>No Movies Found</h2>\r\n");
      out.write("				");

			}
			et.begin();
			em.persist(shistory);
			em.merge(user);
			et.commit();
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
