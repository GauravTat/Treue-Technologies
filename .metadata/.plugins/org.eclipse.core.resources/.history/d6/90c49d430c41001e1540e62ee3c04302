package com.Controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.dto.Book;
import com.dto.RateReview;

@WebServlet("/Review")
public class ReviewRate extends HttpServlet{
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("Booking");
		EntityManager em=emf.createEntityManager();
		EntityTransaction et=em.getTransaction();
		
		int Like=Integer.parseInt(req.getParameter("like"));
		int Quality=Integer.parseInt(req.getParameter("quality"));
		int Over=Integer.parseInt(req.getParameter("overall"));
		String Feedback=req.getParameter("review");
		long id=Integer.parseInt(req.getParameter("id"));
		
		Book b=em.find(Book.class, id);
		
		RateReview rate=new RateReview();
		rate.setReview(Feedback);
		
		switch(Like) {
		case 0:
			rate.setLike(0);
			break;
		case 1:
			rate.setLike(1);
			break;
		case 2:
			rate.setLike(2);
			break;
		case 3:
			rate.setLike(3);
			break;
		case 4:
			rate.setLike(4);
			break;
		case 5:
			rate.setLike(5);
			break;
		}
		
		switch(Quality) {
		case 0:
			rate.setQuality(0);
			break;
		case 1:
			rate.setQuality(1);
			break;
		case 2:
			rate.setQuality(2);
			break;
		case 3:
			rate.setQuality(3);
			break;
		case 4:
			rate.setQuality(4);
			break;
		case 5:
			rate.setQuality(5);
			break;
		}
		
		switch(Over) {
		case 0:
			rate.setOverall(0);
			break;
		case 1:
			rate.setOverall(1);
			break;
		case 2:
			rate.setOverall(2);
			break;
		case 3:
			rate.setOverall(3);
			break;
		case 4:
			rate.setOverall(4);
			break;
		case 5:
			rate.setOverall(5);
			break;
		}
		
		List<RateReview> r=b.getRate();
		if(r.size()>0) {
			r.add(rate);
		}
		else {
			r=new ArrayList<RateReview>();
			r.add(rate);
		}
		b.setRate(r);
		rate.setBook(b);
		
		et.begin();
		em.persist(rate);
		em.merge(b);
		et.commit();
		
		PrintWriter pw=resp.getWriter();
		pw.write("<script>alert('No user is Found')</script>");
		
		req.getRequestDispatcher("LoginFrom.jsp").include(req, resp);
		resp.setContentType("text/html");
		
	}
}
